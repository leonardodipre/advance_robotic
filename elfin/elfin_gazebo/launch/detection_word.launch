<launch>
  <!-- Set the Gazebo model path to include custom models -->
  <env name="GAZEBO_MODEL_PATH" value="$(find elfin_gazebo)/models:$(optenv GAZEBO_MODEL_PATH)" />

  <!-- World -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" />

  <!-- Robot Model -->
  <group ns="elfin">  
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find elfin_description)/urdf/elfin3_experiment1.urdf.xacro'" />
    <node name="urdf_spawner1" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model elfin3 -param robot_description" />
  </group>
        
  <!-- Controller: adaptive_impedance_controller -->
  <rosparam file="$(find elfin_gazebo)/config/adaptive_impedance_controller.yaml" command="load" />

   <!-- State Publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" ns="/elfin" />

  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" ns="/elfin" args="joint_state_controller adaptive_impedance_controller" />

  <!-- Spawn Aruco Marker -->
  <node name="spawn_marker" pkg="gazebo_ros" type="spawn_model" output="screen"
     args="-sdf -model aruco_marker -file $(find elfin_gazebo)/models/object_det/model.sdf -x 0.65 -y 0.15 -z 0 -R 0 -P 0 -Y 0.0" />

  <!-- Spawn Red Car -->
  <node name="spawn_red_car" pkg="gazebo_ros" type="spawn_model" output="screen"
     args="-sdf -model red_car -file $(find elfin_gazebo)/models/object_det/model_car.sdf -x 0.65 -y -0.15 -z 0 -R 0 -P 0 -Y 0.0" />

  <!-- Spawn Banana Marker -->
  <node name="spawn_banana_marker" pkg="gazebo_ros" type="spawn_model" output="screen"
     args="-sdf -model banana_marker -file $(find elfin_gazebo)/models/object_det/banana_model.sdf -x 0.65 -y 0.0  -z 0 -R 0 -P 0 -Y 0.0" />

</launch>
