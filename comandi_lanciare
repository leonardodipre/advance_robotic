roslaunch elfin_gazebo elfin3_empty_world.launch controller:=gravity_comp_controller

roslaunch elfin_gazebo elfin3_empty_world.launch controller:=computed_torque_controller
 

rosrun arm_controllers  movment_publisher.py

rosrun arm_controllers  controll_publisher.py


ARUCO TILES TRAKER

rosrun arm_controllers arunco_vs.py

rosrun arm_controllers aruco_traker_topic.py


rosrun rqt_image_view rqt_image_view


EXERCISE 2

roslaunch elfin_gazebo elfin3_empty_world.launch controller:=gravity_comp_controller

rosrun arm_controllers  movment_publisher.py


rqt_plot /elfin/gravity_comp_controller/state/error[1] \
         /elfin/gravity_comp_controller/state/error[4] \
         /elfin/gravity_comp_controller/state/error[6] \
         /elfin/gravity_comp_controller/state/error_dot[1] \
         /elfin/gravity_comp_controller/state/error_dot[4] \
         /elfin/gravity_comp_controller/state/error_dot[6] \
        



EXERCISE 3

roslaunch elfin_gazebo elfin3_empty_world.launch controller:=computed_torque_controller
 
rosrun arm_controllers  movment_publisher.py

rosrun arm_controllers  controll_publisher.py


rqt_plot /elfin/computed_torque_controller/e/data[1], /elfin/computed_torque_controller/e/data[4] , /elfin/computed_torque_controller/e/data[6]



EXERCISE 4

Launch the nev with the aruco tiles...

    roslaunch elfin_gazebo elfin3_empty_world.launch controller:=computed_torque_controller

python code for traking the tiles
    rosrun arm_controllers arunco_vs.py

Move the robot to the position
    rosrun arm_controllers  movment_publisher.py

Controll the robot movment
    rosrun arm_controllers  controll_publisher.py
    
    
set the  TARGETS moving

    rostopic pub /start_marker_motion std_msgs/Bool "data: true"

    rostopic pub /start_marker_motion std_msgs/Bool "data: false"





ESERCIZIO 5 ( Obstacol)


roslaunch elfin_gazebo obstacol_word.launch controller:=gravity_comp_controller



rosrun plotjuggler plotjuggler -t ROS1



ESERCIZIO 6


    roslaunch elfin_gazebo elfin3_experiment1_world.launch controller:=adaptive_impedance_controller